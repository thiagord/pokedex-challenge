{"version":3,"sources":["services/pokemon.js","components/Card/Card.js","components/Card/index.js","images/loading.gif","Pokedex.js","helpers/typeColors.js","images/error.png","Pokemon.js","App.js","images/logo3.png","components/Navbar/Navbar.js","components/Navbar/index.js","index.js"],"names":["getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getAllPokemon","a","Card","pokemon","history","useHistory","className","onClick","push","id","src","sprites","front_default","alt","name","Pokedex","useState","search","setSearch","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","fPage","initialUrl","sessionStorage","getItem","useEffect","response","next","previous","loadingPokemon","results","fetchData","props","setItem","prev","first","all","map","pokemonRecord","_pokemonData","loadingImg","width","type","onChange","e","target","value","placeholder","size","color","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Pokemon","pokemonId","match","params","toLowerCase","catch","error","undefined","height","weight","types","abilities","fullImageUrl","goBack","style","typeInfo","backgroundColor","pokemonType","abilitiesInfo","ability","generatePokemonJSX","textAlign","errorImg","App","exact","path","render","Navbar","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9435cb4a.chunk.js","sourcesContent":["export function getPokemon( url ) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\nexport async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}","import React from 'react';\r\nimport './style.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Card({ pokemon }) {\r\n\r\n    let history = useHistory();\r\n    return(\r\n   <div className=\"Card\" onClick={() => history.push(\"/\"+pokemon.id)} key={pokemon.id}>\r\n\r\n            <div className=\"Card_img\">\r\n                <img src={pokemon.sprites.front_default} alt=\"Pokemon sprite\" />\r\n            </div>\r\n\r\n            <div className=\"Card_name\">\r\n                {pokemon.name}\r\n            </div>\r\n\r\n         \r\n\r\n  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/loading.b7cd3e0a.gif\";","import React, { useState, useEffect } from 'react';\r\nimport { getAllPokemon, getPokemon } from './services/pokemon';\r\nimport Card from './components/Card'\r\nimport './App.css';\r\nimport loadingImg from './images/loading.gif';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BiSearchAlt2, BiFirstPage } from 'react-icons/bi';\r\nimport { MdNavigateNext, MdNavigateBefore } from 'react-icons/md';\r\n\r\nconst Pokedex = () => {\r\n\r\n  let history = useHistory();\r\n  const [search, setSearch] = useState('');\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState('');\r\n  const [prevUrl, setPrevUrl] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const fPage = 'https://pokeapi.co/api/v2/pokemon/?offset=0&limit=16';\r\n\r\n\r\n  var initialUrl = sessionStorage.getItem('nextUrl');\r\n  if(!initialUrl) {\r\n  var initialUrl = fPage;\r\n  }\r\n\r\n  //Fetch pokemon data from API\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialUrl)\r\n      setNextUrl(response.next);   \r\n      setPrevUrl(response.previous);\r\n      await loadingPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n    //Next Page function\r\n    const next = async(props) => {\r\n      setLoading(true);\r\n      let data = await getAllPokemon(nextUrl)\r\n      sessionStorage.setItem('nextUrl', nextUrl);\r\n      await loadingPokemon(data.results)\r\n      setNextUrl(data.next);\r\n      setPrevUrl(data.previous);\r\n      setLoading(false);    \r\n    \r\n    }\r\n\r\n     //Prev page function\r\n  const prev = async() => {\r\n    if(!prevUrl) return;\r\n    setLoading(true);\r\n    let data = await getAllPokemon(prevUrl)\r\n    sessionStorage.setItem('nextUrl', prevUrl);\r\n    await loadingPokemon(data.results)\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n     \r\n  }\r\n\r\n  //Go to first page\r\n  const first = async() => {\r\n    if(!prevUrl) return;\r\n    setLoading(true);\r\n    let response = await getAllPokemon(fPage);\r\n    sessionStorage.setItem('nextUrl', fPage);\r\n    setNextUrl(response.next);   \r\n    setPrevUrl(response.previous);\r\n    await loadingPokemon(response.results);\r\n    setLoading(false);\r\n  }\r\n \r\n\r\n\r\n  //Load pokemons on the page\r\n  const loadingPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n      let pokemonRecord = await getPokemon(pokemon.url);\r\n      return pokemonRecord;\r\n    }));\r\n    setPokemonData(_pokemonData);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    { loading ? <h1> <img src={loadingImg} alt=\"Loading...\"  width=\"10%\"/></h1> : (\r\n      <>\r\n    \r\n      <div className=\"btn_search\">\r\n      <input className=\"input\" type=\"text\" onChange={e => setSearch(e.target.value)}  placeholder=\"Search by name or ID\" />  <button onClick={() => history.push(\"/\"+search)} > <BiSearchAlt2 size={15} color=\"#fff\"/></button>\r\n      </div>\r\n      <div className=\"btn\">\r\n        <button onClick={first}><BiFirstPage size={25} color=\"#fff\"/></button>\r\n        <button onClick={prev}><MdNavigateBefore size={25} color=\"#fff\"/></button>\r\n        <button onClick={next}><MdNavigateNext size={25} color=\"#fff\"/></button>\r\n      </div>\r\n      <div className=\"grid-container\">\r\n        {pokemonData.map((pokemon) => {\r\n            \r\n          return <Card key={pokemon.id} pokemon={pokemon}/> \r\n          \r\n        })}\r\n        </div>\r\n        <div className=\"btn\">\r\n        <button onClick={first}><BiFirstPage size={25} color=\"#fff\"/></button>\r\n        <button onClick={prev}><MdNavigateBefore size={25} color=\"#fff\"/></button>\r\n        <button onClick={next}><MdNavigateNext size={25} color=\"#fff\"/></button>\r\n      </div>\r\n        </>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokedex;\r\n","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","export default __webpack_public_path__ + \"static/media/error.04785b4c.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport './components/DetailedCard/style.css'\r\nimport pokemonType from './helpers/typeColors';\r\nimport errorImg from './images/error.png';\r\nimport loadingImg from './images/loading.gif';\r\nimport { RiArrowGoBackFill } from 'react-icons/ri';\r\n\r\n\r\nconst Pokemon = (props) => {\r\n    const { match } = props;\r\n    const { params } = match;\r\n    const { pokemonId } = params;\r\n    const [pokemonData, setPokemonData] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    let history = useHistory();\r\n\r\n \r\n\r\n    useEffect(() => {\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon/\"+pokemonId.toLowerCase())\r\n        .then(response => response.json())\r\n        .then(data => setPokemonData(data)) \r\n        .catch(function (error) {\r\n          setPokemonData(false);\r\n        });   \r\n        setLoading(false);    \r\n        }, [pokemonId]);\r\n  \r\n        const generatePokemonJSX = (pokemonData) => {\r\n        const { name, id, height, weight, types, abilities } = pokemonData;\r\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n        \r\n        return (\r\n            <div>\r\n            {(\r\n              <>        \r\n              <div className=\"btn\">\r\n                <button onClick={() => history.goBack()}><RiArrowGoBackFill size={25} color=\"#fff\"/></button>\r\n              </div>\r\n\r\n         <div className=\"grid-container\">\r\n\r\n         <div className=\"Card_big\">\r\n\r\n<div className=\"Card_big_img\">\r\n    <img src={fullImageUrl} style={{ width: \"150px\", height: \"150px\" }} alt=\"Pokemon sprite\" />\r\n</div>\r\n\r\n<div className=\"Card_big_name\">\r\n    {name} #{id}\r\n</div>\r\n\r\n<div className=\"Card_big_types\">\r\n{types.map((typeInfo) => {\r\n          const { type } = typeInfo;\r\n          const { name } = type;\r\n          return <div className=\"Card_big_type\" style={{ backgroundColor: pokemonType[name]}} key={name}> {`${name}`}</div>;\r\n        })}\r\n</div>\r\n\r\n<div className=\"Card_big_info\">\r\n    <div className=\"Card_big_data Card_big_data_weight\">\r\n   <p className=\"title\">Weight</p>\r\n    <p className=\"info\">{weight}</p>     \r\n    </div>\r\n\r\n    <div className=\"Card_big_data Card_big_data_height\">\r\n   <p className=\"title\">Height</p>\r\n    <p className=\"info\">{height}</p>     \r\n    </div>\r\n\r\n\r\n    <div className=\"Card_big_data Card_big_data_height\">\r\n    <p className=\"title\">Abilities</p>\r\n    </div>\r\n    <div className=\"Card_big_types\">\r\n    {abilities.map((abilitiesInfo) => {\r\n          const { ability } = abilitiesInfo;\r\n          const { name } = ability;\r\n          return <p className=\"Card_big_type\" key={name}> {`${name}`}</p>;\r\n        })}\r\n    </div>\r\n     </div>\r\n      </div>\r\n       </div>\r\n    </>\r\n     )};  </div>  \r\n\r\n      )\r\n      };\r\n\r\n        return (\r\n          <div>\r\n             { loading ? <h1> <img src={loadingImg} alt=\"Loading...\"  width=\"10%\"/></h1> : (   \r\n            <>           \r\n              {pokemonData !== undefined && pokemonData && generatePokemonJSX(pokemonData)}\r\n              {pokemonData === false && <h1 style={{textAlign: \"center\", color: \"#fff\"}}>Ops Pokemon not found! <img src={errorImg} style={{ height: \"120px\" }}/>\r\n              <div className=\"btn\">\r\n                <button onClick={() => history.push(\"/\")}><RiArrowGoBackFill size={25} color=\"#fff\"/></button>\r\n              </div></h1>}\r\n            </>\r\n            )};\r\n            </div>\r\n          );\r\n\r\n}\r\n\r\nexport default Pokemon;\r\n\r\n\r\n","import React from 'react';\nimport Pokedex from './Pokedex';\nimport Pokemon from './Pokemon';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return(\n  <Switch>\n  <Route exact path=\"/pokedex-challenge/\" render={(props) => <Pokedex {...props}/> } />\n  <Route  path=\"/:pokemonId\"\n   render={(props) => <Pokemon {...props}/> } />\n  </Switch>\n); }\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo3.031432b8.png\";","import React from 'react';\r\nimport './style.css';\r\nimport loadingImg from '../../images/logo3.png';\r\n\r\nfunction Navbar() {\r\n    return(\r\n    <div className=\"Navbar\">\r\n      <img src={loadingImg} alt=\"Logo\"  width=\"180px\"/>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Navbar","import Navbar from './Navbar';\r\n\r\nexport default Navbar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Navbar from './components/Navbar';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n     <Navbar/>\n    <Router history={history}>\n    <App />\n    </Router>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}